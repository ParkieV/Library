"""initial

Revision ID: 6b9deaf024d2
Revises: 
Create Date: 2023-07-12 12:23:39.762522

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6b9deaf024d2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('authors', sa.String(), nullable=False),
    sa.Column('user_id_taken', sa.Integer(), nullable=True),
    sa.Column('user_reserved_id', sa.Integer(), nullable=True),
    sa.Column('date_start_reserve', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_start_use', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_finish_use', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id_taken'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_reserved_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('surname', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('user_type', sa.String(length=10), nullable=False),
    sa.Column('book_id_taken', sa.Integer(), nullable=True),
    sa.Column('reserved_book_id', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(length=128), nullable=True),
    sa.Column('time_token_create', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['book_id_taken'], ['books.id'], ),
    sa.ForeignKeyConstraint(['reserved_book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('hashed_password')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('book_queries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('type_order', sa.String(length=10), nullable=False),
    sa.Column('type_query', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_queries_id'), 'book_queries', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_book_queries_id'), table_name='book_queries')
    op.drop_table('book_queries')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
